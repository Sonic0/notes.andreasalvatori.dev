name: Deploy site to S3

on:
  workflow_dispatch:
    inputs:
      release:
        description: "Release to deploy"
        default: "main"
        required: false
        type: string
      hugoVersion:
        description: "Hugo Version"
        required: false
        default: "latest"
  push:
    paths-ignore:
      - "images/**"
      - "LICENSE"
      - "README.md"
  release:
    types: [ released ]

# Allow one concurrent deployment
concurrency:
  group: "AWS-S3"
  cancel-in-progress: true

defaults:
  run:
    shell: bash

jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    env:
      HUGO_VERSION: ${{ github.event.inputs.hugoVersion || 'latest' }}
    steps:
      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v3
        with:
          hugo-version: ${{ github.env.HUGO_VERSION }}
          extended: true

      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.release || 'main' }}

      - name: Get Hugo Theme
        run: git submodule update --init --recursive

      - name: Update theme to Latest commit
        run: git submodule update --remote --merge
      
      - name: Update env to production
        run: |
          sed -i "s|env: development|env: production|" config.yml

      - name: Build
        run: hugo --minify --cleanDestinationDir --gc -DEF --baseURL "https://${{ env.URL }}"
        env:
          URL: notes.andreasalvatori.dev
          HUGO_ENVIRONMENT: production
          HUGO_ENV: production

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4            
        with:
          name: hugo-site
          path: ./public

  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Download artifacts (Docker images) from previous workflows
        uses: actions/download-artifact@v4
        with:
          name: hugo-site
          path: ./public
      
      - name: Install AWS CLI v2
        id: install-aws-cli
        uses: unfor19/install-aws-cli-action@v1
        with:
          version: 2

      - name: Assume AWS IAM Role
        id: configure-aws-credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/${{ secrets.IAM_ROLE_NAME }}
          aws-region: ${{ secrets.AWS_REGION }}
          mask-aws-account-id: true

      - name: Sync to S3
        id: deployment
        run: aws s3 sync ./public/ s3://${{ secrets.BUCKET_NAME }} --size-only --delete --exclude "media/*" --region ${{ secrets.AWS_REGION }}

      - name: Get CloudFront Distribution ID
        run: |
          echo "Getting CF distributions matching description 'notes.andreasalvatori.dev-prod'"
          cloudfront_dist_id=$(aws cloudfront list-distributions \
            --query "DistributionList.Items[*].{id:Id,origin_domain:Origins.Items[0].DomainName,comment:Comment}[?starts_with(comment,'notes.andreasalvatori.dev-prod')].id" \
            --output text)
          aws cloudfront create-invalidation --distribution-id ${cloudfront_dist_id} --paths "/*"
