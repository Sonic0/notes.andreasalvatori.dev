name: Deploy site to S3

on:
  workflow_dispatch:
    inputs:
      release:
        description: "Release to deploy"
        default: "main"
        required: false
        type: string
      hugoVersion:
        description: "Hugo Version"
        required: false
        default: "latest"
  push:
    paths-ignore:
      - "images/**"
      - "LICENSE"
      - "README.md"
  release:
    types: [ released ]

# Allow one concurrent deployment
concurrency:
  group: "AWS-S3"
  cancel-in-progress: true

defaults:
  run:
    shell: bash

jobs:
  build-deploy:
    name: build and deploy
    permissions:
      id-token: write
      contents: read
    runs-on: ubuntu-latest
    env:
      HUGO_VERSION: ${{ github.event.inputs.hugoVersion || 'latest' }}
    steps:
      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v3
        with:
          hugo-version: ${{ github.env.HUGO_VERSION }}
          extended: true

      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.release || 'main' }}

      - name: Install AWS CLI v2
        id: install-aws-cli
        uses: unfor19/install-aws-cli-action@v1
        with:
          version: 2

      - name: Get Hugo Theme
        run: git submodule update --init --recursive

      - name: Update theme to Latest commit
        run: git submodule update --remote --merge
      
      - name: Update env to production
        run: |
          sed -i "s|env: development|env: production|" config.yml

      - name: Cache node modules
        id: cache
        uses: actions/cache@v4
        with:
          path: /home/runner/.cache/hugo_cache
          key: ${{ runner.os }}-hugomod-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-hugomod-

      - name: Build
        run: hugo --minify --cleanDestinationDir --gc -DEF --baseURL "https://${{ env.URL }}"
        env:
          URL: notes.andreasalvatori.dev
      
      - name: Config file target update placeholders
        run: |
          sed -i "s|<Bucket Name>|${{ secrets.BUCKET_NAME }}|" config.yml
          sed -i "s|<AWS region>|${{ secrets.AWS_REGION }}|" config.yml

      - name: Assume AWS IAM Role
        id: configure-aws-credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/${{ secrets.IAM_ROLE_NAME }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Deploy to S3
        run: hugo deploy --maxDeletes -1 --invalidateCDN --target AWS-S3 --logLevel info
