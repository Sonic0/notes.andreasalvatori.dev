name: CDK CI

on:
  push:
    branches:
      - '*'
      - '!main'
    paths:
      - 'infrastructure/**'
  workflow_dispatch:

jobs:
  setup:
    name: Install cli and dependencies
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: infrastructure
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      
      - name: Install deps
        run: |
          npm ci
      
      - name: Install CDK
        run: |
          npm install aws-cdk-lib
          npm install -g typescript
          npm install -g aws-cdk

      - name: Cache node modules
        id: cache
        uses: actions/cache@v4
        with:
          path: 'infrastructure/node_modules'
          key: ${{ runner.os }}-ci-infra-${{ hashFiles('package-lock.json') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}

  checks:
    name: Lint and tests
    runs-on: ubuntu-latest
    needs: setup
    defaults:
      run:
        working-directory: infrastructure
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Assume AWS IAM Role
        id: configure-aws-credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/github-bipet-actions-role
          aws-region: ${{ secrets.AWS_REGION }}
      
      - name: Cache node modules
        id: cache
        uses: actions/cache@v4
        with:
          path: 'infrastructure/node_modules'
          key: ${{ runner.os }}-ci-infra-${{ hashFiles('package-lock.json') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
      
      - name: Install CDK cli
        run: |
          npm install -g aws-cdk
      
      - name: Synth CDK infra
        run: cdk synth --all -c deploy-env=prod --require-approval never
        shell: bash
      
      - name: CloudFormation code static analysis
        uses: stelligent/cfn_nag@master
        with:
          input_path: ${{ github.workspace }}/infrastructure/cdk.out
          extra_args: --fail-on-warnings -o json

      - name: Run Trivy vulnerability scanner in IaC mode. Never exits with error, check result out in artifacts.
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'config'
          skip-dirs: "infrastructure/node_modules"
          hide-progress: false
          format: 'json'
          output: 'trivy-results.json'
          exit-code: '0'
          ignore-unfixed: true
          severity: 'CRITICAL,HIGH'
      
      - uses: actions/upload-artifact@v3
        with:
          name: trivy-result
          path: ${{ github.workspace }}/trivy-results.json

  diffs:
    name: Show infra diff with production
    runs-on: ubuntu-latest
    needs: checks
    defaults:
      run:
        working-directory: ${{ github.workspace }}/infrastructure
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Cache node modules
        id: cache
        uses: actions/cache@v4
        with:
          path: 'infrastructure/node_modules'
          key: ${{ runner.os }}-ci-infra-${{ hashFiles('package-lock.json') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
      
      - name: Install CDK cli
        run: |
          npm install -g aws-cdk
      
      - name: Assume AWS IAM Role
        id: configure-aws-credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/github-notes-andreasalvatori-dev-actions-role
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Diff between AWS and local
        run: cdk diff --all -c deploy-env=prod --require-approval never